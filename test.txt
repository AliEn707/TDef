#define tmp config.area_array
#define shift config.gridsize

void initAreaArray(){
	int tmp0[8]={-1+shift*-1, -1+shift*0, -1+shift*1, 0+shift*-1, 0+shift*1, 1+shift*-1, 1+shift*0, 1+shift*1};
	if((tmp[0]=malloc(sizeof(tmp0)))==0)
		perror("malloc tmp0 AreaArray");
	memcpy(tmp[0],tmp0,sizeof(tmp0));
	int tmp1[12]={-2+shift*-1, -2+shift*0, -2+shift*1, -1+shift*-2, -1+shift*2, 0+shift*-2, 0+shift*2, 1+shift*-2, 1+shift*2, 2+shift*-1, 2+shift*0, 2+shift*1};
	if((tmp[1]=malloc(sizeof(tmp1)))==0)
		perror("malloc tmp1 AreaArray");
	memcpy(tmp[1],tmp1,sizeof(tmp1));
	int tmp2[16]={-3+shift*-1, -3+shift*0, -3+shift*1, -2+shift*-2, -2+shift*2, -1+shift*-3, -1+shift*3, 0+shift*-3, 0+shift*3, 1+shift*-3, 1+shift*3, 2+shift*-2, 2+shift*2, 3+shift*-1, 3+shift*0, 3+shift*1};
	if((tmp[2]=malloc(sizeof(tmp2)))==0)
		perror("malloc tmp2 AreaArray");
	memcpy(tmp[2],tmp2,sizeof(tmp2));
	int tmp3[32]={-4+shift*-2, -4+shift*-1, -4+shift*0, -4+shift*1, -4+shift*2, -3+shift*-3, -3+shift*-2, -3+shift*2, -3+shift*3, -2+shift*-4, -2+shift*-3, -2+shift*3, -2+shift*4, -1+shift*-4, -1+shift*4, 0+shift*-4, 0+shift*4, 1+shift*-4, 1+shift*4, 2+shift*-4, 2+shift*-3, 2+shift*3, 2+shift*4, 3+shift*-3, 3+shift*-2, 3+shift*2, 3+shift*3, 4+shift*-2, 4+shift*-1, 4+shift*0, 4+shift*1, 4+shift*2};
	if((tmp[3]=malloc(sizeof(tmp3)))==0)
		perror("malloc tmp3 AreaArray");
	memcpy(tmp[3],tmp3,sizeof(tmp3));
	int tmp4[28]={-5+shift*-2, -5+shift*-1, -5+shift*0, -5+shift*1, -5+shift*2, -4+shift*-3, -4+shift*3, -3+shift*-4, -3+shift*4, -2+shift*-5, -2+shift*5, -1+shift*-5, -1+shift*5, 0+shift*-5, 0+shift*5, 1+shift*-5, 1+shift*5, 2+shift*-5, 2+shift*5, 3+shift*-4, 3+shift*4, 4+shift*-3, 4+shift*3, 5+shift*-2, 5+shift*-1, 5+shift*0, 5+shift*1, 5+shift*2};
	if((tmp[4]=malloc(sizeof(tmp4)))==0)
		perror("malloc tmp4 AreaArray");
	memcpy(tmp[4],tmp4,sizeof(tmp4));
	int tmp5[40]={-6+shift*-2, -6+shift*-1, -6+shift*0, -6+shift*1, -6+shift*2, -5+shift*-4, -5+shift*-3, -5+shift*3, -5+shift*4, -4+shift*-5, -4+shift*-4, -4+shift*4, -4+shift*5, -3+shift*-5, -3+shift*5, -2+shift*-6, -2+shift*6, -1+shift*-6, -1+shift*6, 0+shift*-6, 0+shift*6, 1+shift*-6, 1+shift*6, 2+shift*-6, 2+shift*6, 3+shift*-5, 3+shift*5, 4+shift*-5, 4+shift*-4, 4+shift*4, 4+shift*5, 5+shift*-4, 5+shift*-3, 5+shift*3, 5+shift*4, 6+shift*-2, 6+shift*-1, 6+shift*0, 6+shift*1, 6+shift*2};
	if((tmp[5]=malloc(sizeof(tmp5)))==0)
		perror("malloc tmp5 AreaArray");
	memcpy(tmp[5],tmp5,sizeof(tmp5));
	int tmp6[40]={-7+shift*-2, -7+shift*-1, -7+shift*0, -7+shift*1, -7+shift*2, -6+shift*-4, -6+shift*-3, -6+shift*3, -6+shift*4, -5+shift*-5, -5+shift*5, -4+shift*-6, -4+shift*6, -3+shift*-6, -3+shift*6, -2+shift*-7, -2+shift*7, -1+shift*-7, -1+shift*7, 0+shift*-7, 0+shift*7, 1+shift*-7, 1+shift*7, 2+shift*-7, 2+shift*7, 3+shift*-6, 3+shift*6, 4+shift*-6, 4+shift*6, 5+shift*-5, 5+shift*5, 6+shift*-4, 6+shift*-3, 6+shift*3, 6+shift*4, 7+shift*-2, 7+shift*-1, 7+shift*0, 7+shift*1, 7+shift*2};
	if((tmp[6]=malloc(sizeof(tmp6)))==0)
		perror("malloc tmp6 AreaArray");
	memcpy(tmp[6],tmp6,sizeof(tmp6));
	int tmp7[48]={-8+shift*-2, -8+shift*-1, -8+shift*0, -8+shift*1, -8+shift*2, -7+shift*-4, -7+shift*-3, -7+shift*3, -7+shift*4, -6+shift*-6, -6+shift*-5, -6+shift*5, -6+shift*6, -5+shift*-6, -5+shift*6, -4+shift*-7, -4+shift*7, -3+shift*-7, -3+shift*7, -2+shift*-8, -2+shift*8, -1+shift*-8, -1+shift*8, 0+shift*-8, 0+shift*8, 1+shift*-8, 1+shift*8, 2+shift*-8, 2+shift*8, 3+shift*-7, 3+shift*7, 4+shift*-7, 4+shift*7, 5+shift*-6, 5+shift*6, 6+shift*-6, 6+shift*-5, 6+shift*5, 6+shift*6, 7+shift*-4, 7+shift*-3, 7+shift*3, 7+shift*4, 8+shift*-2, 8+shift*-1, 8+shift*0, 8+shift*1, 8+shift*2};
	if((tmp[7]=malloc(sizeof(tmp7)))==0)
		perror("malloc tmp7 AreaArray");
	memcpy(tmp[7],tmp7,sizeof(tmp7));
	int tmp8[68]={-9+shift*-3, -9+shift*-2, -9+shift*-1, -9+shift*0, -9+shift*1, -9+shift*2, -9+shift*3, -8+shift*-5, -8+shift*-4, -8+shift*-3, -8+shift*3, -8+shift*4, -8+shift*5, -7+shift*-6, -7+shift*-5, -7+shift*5, -7+shift*6, -6+shift*-7, -6+shift*7, -5+shift*-8, -5+shift*-7, -5+shift*7, -5+shift*8, -4+shift*-8, -4+shift*8, -3+shift*-9, -3+shift*-8, -3+shift*8, -3+shift*9, -2+shift*-9, -2+shift*9, -1+shift*-9, -1+shift*9, 0+shift*-9, 0+shift*9, 1+shift*-9, 1+shift*9, 2+shift*-9, 2+shift*9, 3+shift*-9, 3+shift*-8, 3+shift*8, 3+shift*9, 4+shift*-8, 4+shift*8, 5+shift*-8, 5+shift*-7, 5+shift*7, 5+shift*8, 6+shift*-7, 6+shift*7, 7+shift*-6, 7+shift*-5, 7+shift*5, 7+shift*6, 8+shift*-5, 8+shift*-4, 8+shift*-3, 8+shift*3, 8+shift*4, 8+shift*5, 9+shift*-3, 9+shift*-2, 9+shift*-1, 9+shift*0, 9+shift*1, 9+shift*2, 9+shift*3};
	if((tmp[8]=malloc(sizeof(tmp8)))==0)
		perror("malloc tmp8 AreaArray");
	memcpy(tmp[8],tmp8,sizeof(tmp8));
	int tmp9[56]={-10+shift*-3, -10+shift*-2, -10+shift*-1, -10+shift*0, -10+shift*1, -10+shift*2, -10+shift*3, -9+shift*-5, -9+shift*-4, -9+shift*4, -9+shift*5, -8+shift*-6, -8+shift*6, -7+shift*-7, -7+shift*7, -6+shift*-8, -6+shift*8, -5+shift*-9, -5+shift*9, -4+shift*-9, -4+shift*9, -3+shift*-10, -3+shift*10, -2+shift*-10, -2+shift*10, -1+shift*-10, -1+shift*10, 0+shift*-10, 0+shift*10, 1+shift*-10, 1+shift*10, 2+shift*-10, 2+shift*10, 3+shift*-10, 3+shift*10, 4+shift*-9, 4+shift*9, 5+shift*-9, 5+shift*9, 6+shift*-8, 6+shift*8, 7+shift*-7, 7+shift*7, 8+shift*-6, 8+shift*6, 9+shift*-5, 9+shift*-4, 9+shift*4, 9+shift*5, 10+shift*-3, 10+shift*-2, 10+shift*-1, 10+shift*0, 10+shift*1, 10+shift*2, 10+shift*3};
	if((tmp[9]=malloc(sizeof(tmp9)))==0)
		perror("malloc tmp9 AreaArray");
	memcpy(tmp[9],tmp9,sizeof(tmp9));
	int tmp10[72]={-11+shift*-3, -11+shift*-2, -11+shift*-1, -11+shift*0, -11+shift*1, -11+shift*2, -11+shift*3, -10+shift*-5, -10+shift*-4, -10+shift*4, -10+shift*5, -9+shift*-7, -9+shift*-6, -9+shift*6, -9+shift*7, -8+shift*-8, -8+shift*-7, -8+shift*7, -8+shift*8, -7+shift*-9, -7+shift*-8, -7+shift*8, -7+shift*9, -6+shift*-9, -6+shift*9, -5+shift*-10, -5+shift*10, -4+shift*-10, -4+shift*10, -3+shift*-11, -3+shift*11, -2+shift*-11, -2+shift*11, -1+shift*-11, -1+shift*11, 0+shift*-11, 0+shift*11, 1+shift*-11, 1+shift*11, 2+shift*-11, 2+shift*11, 3+shift*-11, 3+shift*11, 4+shift*-10, 4+shift*10, 5+shift*-10, 5+shift*10, 6+shift*-9, 6+shift*9, 7+shift*-9, 7+shift*-8, 7+shift*8, 7+shift*9, 8+shift*-8, 8+shift*-7, 8+shift*7, 8+shift*8, 9+shift*-7, 9+shift*-6, 9+shift*6, 9+shift*7, 10+shift*-5, 10+shift*-4, 10+shift*4, 10+shift*5, 11+shift*-3, 11+shift*-2, 11+shift*-1, 11+shift*0, 11+shift*1, 11+shift*2, 11+shift*3};
	if((tmp[10]=malloc(sizeof(tmp10)))==0)
		perror("malloc tmp10 AreaArray");
	memcpy(tmp[10],tmp10,sizeof(tmp10));
	int tmp11[68]={-12+shift*-3, -12+shift*-2, -12+shift*-1, -12+shift*0, -12+shift*1, -12+shift*2, -12+shift*3, -11+shift*-5, -11+shift*-4, -11+shift*4, -11+shift*5, -10+shift*-7, -10+shift*-6, -10+shift*6, -10+shift*7, -9+shift*-8, -9+shift*8, -8+shift*-9, -8+shift*9, -7+shift*-10, -7+shift*10, -6+shift*-10, -6+shift*10, -5+shift*-11, -5+shift*11, -4+shift*-11, -4+shift*11, -3+shift*-12, -3+shift*12, -2+shift*-12, -2+shift*12, -1+shift*-12, -1+shift*12, 0+shift*-12, 0+shift*12, 1+shift*-12, 1+shift*12, 2+shift*-12, 2+shift*12, 3+shift*-12, 3+shift*12, 4+shift*-11, 4+shift*11, 5+shift*-11, 5+shift*11, 6+shift*-10, 6+shift*10, 7+shift*-10, 7+shift*10, 8+shift*-9, 8+shift*9, 9+shift*-8, 9+shift*8, 10+shift*-7, 10+shift*-6, 10+shift*6, 10+shift*7, 11+shift*-5, 11+shift*-4, 11+shift*4, 11+shift*5, 12+shift*-3, 12+shift*-2, 12+shift*-1, 12+shift*0, 12+shift*1, 12+shift*2, 12+shift*3};
	if((tmp[11]=malloc(sizeof(tmp11)))==0)
		perror("malloc tmp11 AreaArray");
	memcpy(tmp[11],tmp11,sizeof(tmp11));
	int tmp12[88]={-13+shift*-3, -13+shift*-2, -13+shift*-1, -13+shift*0, -13+shift*1, -13+shift*2, -13+shift*3, -12+shift*-6, -12+shift*-5, -12+shift*-4, -12+shift*4, -12+shift*5, -12+shift*6, -11+shift*-7, -11+shift*-6, -11+shift*6, -11+shift*7, -10+shift*-9, -10+shift*-8, -10+shift*8, -10+shift*9, -9+shift*-10, -9+shift*-9, -9+shift*9, -9+shift*10, -8+shift*-10, -8+shift*10, -7+shift*-11, -7+shift*11, -6+shift*-12, -6+shift*-11, -6+shift*11, -6+shift*12, -5+shift*-12, -5+shift*12, -4+shift*-12, -4+shift*12, -3+shift*-13, -3+shift*13, -2+shift*-13, -2+shift*13, -1+shift*-13, -1+shift*13, 0+shift*-13, 0+shift*13, 1+shift*-13, 1+shift*13, 2+shift*-13, 2+shift*13, 3+shift*-13, 3+shift*13, 4+shift*-12, 4+shift*12, 5+shift*-12, 5+shift*12, 6+shift*-12, 6+shift*-11, 6+shift*11, 6+shift*12, 7+shift*-11, 7+shift*11, 8+shift*-10, 8+shift*10, 9+shift*-10, 9+shift*-9, 9+shift*9, 9+shift*10, 10+shift*-9, 10+shift*-8, 10+shift*8, 10+shift*9, 11+shift*-7, 11+shift*-6, 11+shift*6, 11+shift*7, 12+shift*-6, 12+shift*-5, 12+shift*-4, 12+shift*4, 12+shift*5, 12+shift*6, 13+shift*-3, 13+shift*-2, 13+shift*-1, 13+shift*0, 13+shift*1, 13+shift*2, 13+shift*3};
	if((tmp[12]=malloc(sizeof(tmp12)))==0)
		perror("malloc tmp12 AreaArray");
	memcpy(tmp[12],tmp12,sizeof(tmp12));
	int tmp13[88]={-14+shift*-3, -14+shift*-2, -14+shift*-1, -14+shift*0, -14+shift*1, -14+shift*2, -14+shift*3, -13+shift*-6, -13+shift*-5, -13+shift*-4, -13+shift*4, -13+shift*5, -13+shift*6, -12+shift*-8, -12+shift*-7, -12+shift*7, -12+shift*8, -11+shift*-9, -11+shift*-8, -11+shift*8, -11+shift*9, -10+shift*-10, -10+shift*10, -9+shift*-11, -9+shift*11, -8+shift*-12, -8+shift*-11, -8+shift*11, -8+shift*12, -7+shift*-12, -7+shift*12, -6+shift*-13, -6+shift*13, -5+shift*-13, -5+shift*13, -4+shift*-13, -4+shift*13, -3+shift*-14, -3+shift*14, -2+shift*-14, -2+shift*14, -1+shift*-14, -1+shift*14, 0+shift*-14, 0+shift*14, 1+shift*-14, 1+shift*14, 2+shift*-14, 2+shift*14, 3+shift*-14, 3+shift*14, 4+shift*-13, 4+shift*13, 5+shift*-13, 5+shift*13, 6+shift*-13, 6+shift*13, 7+shift*-12, 7+shift*12, 8+shift*-12, 8+shift*-11, 8+shift*11, 8+shift*12, 9+shift*-11, 9+shift*11, 10+shift*-10, 10+shift*10, 11+shift*-9, 11+shift*-8, 11+shift*8, 11+shift*9, 12+shift*-8, 12+shift*-7, 12+shift*7, 12+shift*8, 13+shift*-6, 13+shift*-5, 13+shift*-4, 13+shift*4, 13+shift*5, 13+shift*6, 14+shift*-3, 14+shift*-2, 14+shift*-1, 14+shift*0, 14+shift*1, 14+shift*2, 14+shift*3};
	if((tmp[13]=malloc(sizeof(tmp13)))==0)
		perror("malloc tmp13 AreaArray");
	memcpy(tmp[13],tmp13,sizeof(tmp13));
	int tmp14[84]={-15+shift*-3, -15+shift*-2, -15+shift*-1, -15+shift*0, -15+shift*1, -15+shift*2, -15+shift*3, -14+shift*-6, -14+shift*-5, -14+shift*-4, -14+shift*4, -14+shift*5, -14+shift*6, -13+shift*-8, -13+shift*-7, -13+shift*7, -13+shift*8, -12+shift*-9, -12+shift*9, -11+shift*-10, -11+shift*10, -10+shift*-11, -10+shift*11, -9+shift*-12, -9+shift*12, -8+shift*-13, -8+shift*13, -7+shift*-13, -7+shift*13, -6+shift*-14, -6+shift*14, -5+shift*-14, -5+shift*14, -4+shift*-14, -4+shift*14, -3+shift*-15, -3+shift*15, -2+shift*-15, -2+shift*15, -1+shift*-15, -1+shift*15, 0+shift*-15, 0+shift*15, 1+shift*-15, 1+shift*15, 2+shift*-15, 2+shift*15, 3+shift*-15, 3+shift*15, 4+shift*-14, 4+shift*14, 5+shift*-14, 5+shift*14, 6+shift*-14, 6+shift*14, 7+shift*-13, 7+shift*13, 8+shift*-13, 8+shift*13, 9+shift*-12, 9+shift*12, 10+shift*-11, 10+shift*11, 11+shift*-10, 11+shift*10, 12+shift*-9, 12+shift*9, 13+shift*-8, 13+shift*-7, 13+shift*7, 13+shift*8, 14+shift*-6, 14+shift*-5, 14+shift*-4, 14+shift*4, 14+shift*5, 14+shift*6, 15+shift*-3, 15+shift*-2, 15+shift*-1, 15+shift*0, 15+shift*1, 15+shift*2, 15+shift*3};
	if((tmp[14]=malloc(sizeof(tmp14)))==0)
		perror("malloc tmp14 AreaArray");
	memcpy(tmp[14],tmp14,sizeof(tmp14));
}

void realizeAreaArray(){
	int i;
	for(i=0;i<16;i++)
		free(tmp[i]);
}

#undef shift
#undef tmp
